name: CI
#on:
#  workflow_dispatch:
#  push:

# only when this file or something in firmware/ changes
on:
  push:
      paths:
      - .github/**
      - firmware/**

permissions:
  contents: write

jobs:
  checkout:
    runs-on: ubuntu-latest
    name: Checkout
    steps:
      - name: Cache repository
        uses: actions/cache@v3
        id: cache-repository
        with:
          path: repository
          key: ${{ runner.os }}-repository-${{ github.sha }}

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          path: repository
          submodules: recursive

  install-idf:
    runs-on: ubuntu-latest
    name: Install esp-idf
    needs:
      - checkout
    steps:
      - name: Cache repository
        uses: actions/cache@v3
        id: cache-repository
        with:
          path: repository
          key: ${{ runner.os }}-repository-${{ github.sha }}

      - name: Verify that "Cache repostory" had a hit
        if: ${{ steps.cache-repository.outputs.cache-hit != 'true' }}
        run: exit 1

      - name: Get esp-idf release name
        id: get-esp-idf-release
        run: echo "tag_name=$(git -C repository/firmware/esp-idf describe --tags --abbrev=0)" >> $GITHUB_ENV

      - name: Cache .espressif
        id: cache-espressif
        uses: actions/cache@v3
        with:
          path: ~/.espressif
          key: ${{ runner.os }}-espressif-${{ steps.get-esp-idf-release.outputs.tag_name }}

      - name: Install .espressif dependencies
        if: ${{ steps.cache-espressif.outputs.cache-hit != 'true' }}
        run: repository/firmware/esp-idf/install.sh

  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: [esp32, esp32c3]
    name: ${{ matrix.node }}
    needs:
      - checkout
      - install-idf
    steps:
      - name: Cache repository
        uses: actions/cache@v3
        id: cache-repository
        with:
          path: repository
          key: ${{ runner.os }}-repository-${{ github.sha }}

      - name: Verify that "Cache repostory" had a hit
        if: ${{ steps.cache-repository.outputs.cache-hit != 'true' }}
        run: exit 1

      - name: Get esp-idf release name
        id: get-esp-idf-release
        run: echo "tag_name=$(git -C repository/firmware/esp-idf describe --tags --abbrev=0)" >> $GITHUB_ENV

      - name: Cache .espressif
        id: cache-espressif
        uses: actions/cache@v3
        with:
          path: ~/.espressif
          key: ${{ runner.os }}-espressif-${{ steps.get-esp-idf-release.outputs.tag_name }}

      - name: Verify that "Cache .espressif" had a hit
        if: ${{ steps.cache-espressif.outputs.cache-hit != 'true' }}
        run: |
          echo "Cache .espressif did not hit? Did the prepare step run successfully?"
          exit 1

      - name: Build firmware
        run: |
          cd repository/firmware
          ./esp-idf/install.sh
          . export.sh
          ./switchconf.sh ${{ matrix.node }}
          idf.py build

      - name: Set outputs
        id: vars
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: esp-now-portable-sender_${{ matrix.node }}
          path: |
            repository/firmware/build_${{ matrix.node }}/esp-now-portable-sender.bin
